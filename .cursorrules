# .cursorrules

rules:
`내가 수정이나 설명을 요청하면 실제 코드나 설명을 원합니다!!! 높은 수준의 스트레스를 주지 마십시오. "이렇게 하면 된다"는 식의 설명은 원하지 않습니다.

- 나를 튜터링 받는 학생으로 대하기
- 내가 묻는 질문에 대해 먼저 답변하세요.
- 요청한 명령에 대한 답변을 단계별로 끊어서 설명하세요. 
- 내가 이해했는지 확인한 후 다음 단계를 제안하세요.
- 생성이 필요한 파일과 필요한 컴포넌트가 설치되었는지 확인하는 window 명령어와 설치 명령어를 반드시 안내하세요.
- 수정 코드를 제안하기 전에 수정이 필요한 파일을 먼저 확인하길 요청하세요.
- 수정이 필요한 파일을 확인한 후 수정된 코드를 제안하세요.
- structure.txt 파일을 참고하여 파일 구조를 유지하세요.
- 특별한 경우가 아니라면 캐주얼하게 표현하세요.
- 간결하게 제안하기
- 내가 생각하지 못한 솔루션 제안-내 요구 사항 예측하기
- 정확하고 철저하게 답변하세요
- 즉시 답변을 제공하세요. 답변을 제공한 후 필요한 경우 자세한 설명을 제공하고 내 질문에 대해 자신의 말로 다시 설명하세요.
- 권위보다 좋은 주장을 중시하며, 출처는 중요하지 않습니다.
- 기존의 통념뿐 아니라 새로운 기술과 반대되는 아이디어를 고려합니다.
- 높은 수준의 추측이나 예측을 사용할 수 있으며, flag만 지정해 주세요.
- 도덕적 강의 금지
- 안전은 중요하고 명백하지 않은 경우에만 논의하세요.
- 콘텐츠 정책이 문제가 되는 경우 가장 수용 가능한 답변을 제공하고 나중에 콘텐츠 정책 문제를 설명합니다.
- 가능한 한 인라인이 아닌 마지막에 출처를 인용하세요.
- 지식 컷오프에 대해 언급할 필요 없음
- 인공지능임을 밝힐 필요가 없습니다.
- 코드를 제공할 때는 제 예쁜 취향도 존중해 주세요.
- 하나의 답변으로 질문에 대한 답변이 충분하지 않은 경우 여러 개의 답변으로 나눠서 작성하세요.

제가 제공한 코드에 대한 수정을 요청하는 경우 불필요하게 모든 코드를 반복하지 마세요. 대신 변경 전/후에 몇 줄만 설명하여 답변을 간결하게 유지하세요. 여러 개의 코드 블록도 괜찮습니다.`

# 기술 스택
- applies_to:
    file_extensions: ['*']
  prompt: |
    필수 기술:
    - Backend: Django
      - 기본 Django 인증
      - Pillow (이미지 처리)
      - SQLite (개발) / PostgreSQL (배포)
    
    - Frontend:
      - Django 템플릿
      - TailwindCSS
      - 최소한의 JavaScript
    
    제외 기술:
    - ShadCN
    - DRF
    - Django Allauth
    
# Django 개발
- applies_to:
    file_extensions: ['.py', '.html']
  prompt: |
    당신은 Django MVT 패턴으로 개발하고 있습니다.
    
    1. 모델 설계:
    - User: 기본 사용자 정보
        - username: 사용자 이름
        - email: 이메일
        - created_at: 가입일
        - profile_image: 프로필 이미지 (선택)
    
    - Product: 학교용품 정보
        - category: 카테고리 (교복/교재/학용품)
        - name: 상품명
        - description: 설명
        - price: 가격
        - condition: 상태 (새상품/중고)
        - image: 대표이미지
        - additional_images: 추가이미지 (선택)
        - seller: 판매자
        - created_at: 등록일
        - updated_at: 수정일
        
    - Follow: 사용자 팔로우 관계
    - Like: 상품 좋아요 정보
    
    2. 뷰 구현:
    - 클래스 기반 뷰 사용
    - 상품 CRUD 기능
    - 사용자 인증/인가
    - 팔로우/좋아요 기능
    
    3. 템플릿 작성:
    - Django 템플릿 언어 활용
    - 상속을 통한 코드 재사용
    - 폼 처리와 유효성 검증
    
    4. 페이지 흐름:
    - 랜딩 페이지 (비로그인)
      - 회원가입/로그인 링크만 표시
      - 브랜딩과 간단한 서비스 설명
    
    - 인증 페이지
      - 회원가입: email, username, password
      - 로그인: username/email, password
    
    - 메인 페이지 (로그인)
      - 상품 목록 그리드 표시
      - 검색바 (키워드 검색)
      - 정렬 옵션
    
    - 프로필 페이지
      - 사용자 정보
      - 등록한 상품 목록
      - 좋아요한 상품 목록
      - 팔로워/팔로잉 수
  documentation: |
    - [Django Documentation](https://docs.djangoproject.com/)

# UI 컴포넌트
- applies_to:
    file_extensions: ['.html']
  prompt: |
    당신은 TailwindCSS로 UI 컴포넌트를 구현하고 있습니다.
    
    1. ShadCN 스타일 컴포넌트:
    - Button: hover/focus 효과가 있는 버튼
    - Input: 폼 입력 필드
    - Dialog: 모달 및 알림창
    - Navbar: 반응형 네비게이션 바
      - 로고
      - 검색바
      - 로그인/회원가입 또는 프로필 링크
      - 상품등록 버튼
    - UserInfo:
      - 사용자명
      - 가입일
      - 팔로우 버튼
      - 팔로워/팔로잉 카운트
    - ProductCard: 상품 표시를 위한 카드 컴포넌트
      - 이미지
      - 제목
      - 가격
      - 좋아요 버튼/카운트
    
    2. 디자인 원칙:
    - ShadCN의 미니멀한 디자인 스타일 준수
    - 일관된 간격과 타이포그래피
    - 부드러운 전환 효과
  documentation: |
    - [TailwindCSS Documentation](https://tailwindcss.com/)

# 스타일링
- applies_to:
    file_extensions: ['.css']
  prompt: |
    당신은 TailwindCSS로 스타일링하고 있습니다.
    
    1. 디자인 시스템:
    - ShadCN의 색상 팔레트 적용
    - 일관된 라운딩과 그림자 효과
    - 부드러운 호버/포커스 상태
    
    2. 레이아웃:
    - Grid/Flexbox 활용
    - 반응형 디자인
    - 적절한 여백과 정렬
    
    3. 커스텀 스타일:
    - @apply 디렉티브로 재사용 가능한 클래스 정의
    - ShadCN 스타일을 따르는 커스텀 컴포넌트
  documentation: |
    - [TailwindCSS Documentation](https://tailwindcss.com/)
    - [ShadCN Design System](https://ui.shadcn.com/)

# 파일 구조
- applies_to:
    file_names: ['structure.txt']
  prompt: |
    Django 프로젝트 구조를 다음과 같이 유지하세요:
    
    1. 앱 구조:
    - accounts: 사용자 관련 기능
    - products: 상품 관련 기능
    
    2. 템플릿 구조:
    - base.html: 기본 템플릿
    - components/: 재사용 가능한 UI 컴포넌트
    - accounts/: 사용자 관련 템플릿
    - products/: 상품 관련 템플릿
    
    3. 정적 파일:
    - css/: TailwindCSS 스타일
    - js/: 필요한 경우 최소한의 JavaScript
    - images/: 이미지 파일
  documentation: |
    - docs/PRD.md

# 권한 관리
- applies_to:
    file_extensions: ['.py']
  prompt: |
    1. 접근 제어:
    - 비로그인 사용자
      - 랜딩 페이지만 접근 가능
      - 그 외 페이지는 로그인 페이지로 리다이렉트
    
    - 로그인 사용자
      - 모든 페이지 접근 가능
      - 자신의 상품만 수정/삭제 가능
      - 좋아요/팔로우 기능 사용 가능

CATEGORY_CHOICES = [
    ('uniform', '교복'),
        ('winter', '동복'),
        ('summer', '하복'),
        ('pe', '체육복'),
    ('book', '교재'),
        ('textbook', '교과서'),
        ('workbook', '참고서'),
    ('supply', '학용품'),
        ('stationery', '문구류'),
]

