# Generated by Django 5.1.4 on 2024-12-23 12:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='사용자가 속한 그룹들', related_name='custom_user_set', to='auth.group', verbose_name='그룹')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='사용자의 권한들', related_name='custom_user_set', to='auth.permission', verbose_name='사용자 권한')),
            ],
            options={
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='지역')),
                ('school', models.CharField(blank=True, max_length=100, verbose_name='학교')),
                ('major', models.CharField(blank=True, max_length=100, verbose_name='전공')),
                ('height', models.IntegerField(blank=True, null=True, verbose_name='키')),
                ('weight', models.IntegerField(blank=True, null=True, verbose_name='몸무게')),
                ('usual_size', models.CharField(blank=True, choices=[('XS', 'XS'), ('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL')], max_length=2, null=True, verbose_name='평소 사이즈')),
                ('bio', models.TextField(blank=True, verbose_name='인사말')),
                ('profile_image', models.ImageField(blank=True, help_text='권장 크기: 300x300px, 최대 2MB', null=True, upload_to='profiles/')),
                ('grade', models.CharField(blank=True, max_length=10, null=True, verbose_name='학년')),
                ('rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=3, verbose_name='평점')),
                ('review_count', models.IntegerField(default=0, verbose_name='리뷰 수')),
                ('gender', models.CharField(blank=True, choices=[('M', '남성'), ('F', '여성')], max_length=1)),
                ('is_school_info_public', models.BooleanField(default=True, verbose_name='학교 정보 공개')),
                ('is_personal_info_public', models.BooleanField(default=True, verbose_name='개인 정보 공개')),
            ],
            options={
                'db_table': 'user_profile',
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following_set', to=settings.AUTH_USER_MODEL)),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('follower', 'following')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='following',
            field=models.ManyToManyField(related_name='followers', through='accounts.Follow', to=settings.AUTH_USER_MODEL),
        ),
    ]
